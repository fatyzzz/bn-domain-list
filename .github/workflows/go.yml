name: Build dlc.dat
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          path: code

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: code/go.mod

      - name: Set variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
        shell: bash

      - name: Build dlc.dat file
        run: |
          cd code || exit 1
          go run ./ --outputdir=../ --exportlists=category-ads-all,apple,icloud
          cd ../ && rm -rf code

      - name: Duplicate dlc.dat as geosite.dat
        run: |
          cp dlc.dat geosite.dat

      - name: Generate dlc.dat and geosite.dat sha256 hashes
        run: |
          sha256sum dlc.dat > dlc.dat.sha256sum
          sha256sum geosite.dat > geosite.dat.sha256sum

      - name: Generate Zip
        run: |
          zip -9 dlc.dat.zip dlc.dat
          zip -9 geosite.dat.zip geosite.dat
          sha256sum dlc.dat.zip > dlc.dat.zip.sha256sum
          sha256sum geosite.dat.zip > geosite.dat.zip.sha256sum

      - name: Generate XZ
        run: |
          xz -z -9 -k dlc.dat
          xz -z -9 -k geosite.dat
          sha256sum dlc.dat.xz > dlc.dat.xz.sha256sum
          sha256sum geosite.dat.xz > geosite.dat.xz.sha256sum

      # Новый шаг: Генерация list.txt из файлов в папке data
      - name: Generate list.txt from data files
        run: |
          # Убедимся, что папка data существует
          mkdir -p data || true
      
          # Проверяем наличие любых файлов в папке data
          cd data || exit 1
          if [ -z "$(ls -A 2>/dev/null)" ]; then
            echo "No files found in the 'data' directory. Creating an empty list.txt."
            echo "" > ../list.txt  # Создаем пустой list.txt
          else
            # Если файлы есть, записываем их имена в list.txt
            for file in *; do
              # Игнорируем поддиректории, добавляем только файлы
              if [ -f "$file" ]; then
                echo "$file" >> ../list.txt
              fi
            done
          fi
      
          # Возвращаемся в родительскую директорию
          cd ..
      
          # Проверяем содержимое list.txt
          cat list.txt

      - name: Git push assets to "release" branch
        run: |
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add *.txt *.sha256sum dlc.dat dlc.dat.zip dlc.dat.xz geosite.dat geosite.dat.zip geosite.dat.xz list.txt
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Release and upload assets
        run: |
          gh release create ${{ env.TAG_NAME }} --generate-notes --latest --title ${{ env.RELEASE_NAME }} \
            ./dlc.dat ./dlc.dat.* ./geosite.dat ./geosite.dat.* ./list.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
